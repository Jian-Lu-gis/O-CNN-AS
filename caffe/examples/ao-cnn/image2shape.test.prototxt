# layer {
#   name: "octdata"
#   type: "OctreeDataBase"
#   top: "octdata"
#   top: "label"
#   include {
#     phase: TRAIN
#   }
#   data_param {
#     source: "C:/Users/v-pewan/Desktop/Image2Shape/0515_shapenet_train_7_2_adpt4_lmdb"
#     batch_size: 1
#     backend: LMDB
#   }
#   octree_param {
#     curr_depth: 7
#     signal_channel: 4
#     signal_location: 1
#     segmentation: true
#   }
# }
# layer {
#   name: "octdata"
#   type: "OctreeDataBase"
#   top: "octdata"
#   top: "label"
#   include {
#     phase: TEST
#   }
#   data_param {
#     source: "C:/Users/v-pewan/Desktop/Image2Shape/0515_shapenet_test_7_2_adpt4_lmdb"
#     batch_size: 1
#     backend: LMDB
#   }
#   octree_param {
#     curr_depth: 7
#     signal_channel: 4
#     signal_location: 1
#     segmentation: true
#   }
# }


layer {
    name: "imgdata"
    type: "Data"
    top: "imgdata"
    # top: "label"
    include {
        phase: TRAIN
    }
    transform_param {
        mirror: true
        crop_size: 129
        mean_value: 125
        mean_value: 134
        mean_value: 145
    }
    data_param {
    source: "img_train_lmdb"
    batch_size: 1
    backend: LMDB
    }
}
layer {
    name: "imgdata"
    type: "Data"
    top: "imgdata"
    # top: "label"
    include {
        phase: TEST
    }
    transform_param {
        mirror: false
        crop_size: 129
        mean_value: 125
        mean_value: 134
        mean_value: 145
    }
    data_param {
    source: "img_test_lmdb"
    batch_size: 1
    backend: LMDB
    # prefetch: 1
    }
}
#================================
# Encoder

# ==============================
# ==============================


layer {
    bottom: "imgdata"
    top: "conv1"
    name: "conv1"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 5
        pad: 3
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}


layer {
    bottom: "conv1"
    top: "conv1"
    name: "bn_conv1"
    type: "BatchNorm"

}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "scale_conv1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "conv1"
    top: "conv1"
    name: "conv1_relu"
    type: "ReLU"
}

layer {
    bottom: "conv1"
    top: "pool1"
    name: "pool1"
    type: "Pooling"
    pooling_param {
        kernel_size: 3
        stride: 2
        pool: MAX
    }
}

layer {
    bottom: "pool1"
    top: "res2a_branch1"
    name: "res2a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 1
        pad: 0
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res2a_branch1"
    top: "res2a_branch1"
    name: "bn2a_branch1"
    type: "BatchNorm"

    
}

layer {
    bottom: "res2a_branch1"
    top: "res2a_branch1"
    name: "scale2a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "pool1"
    top: "res2a_branch2a"
    name: "res2a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2a"
    name: "bn2a_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2a"
    name: "scale2a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2a"
    name: "res2a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a_branch2a"
    top: "res2a_branch2b"
    name: "res2a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2b"
    name: "bn2a_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res2a_branch2b"
    top: "res2a_branch2b"
    name: "scale2a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res2a_branch1"
    bottom: "res2a_branch2b"
    top: "res2a"
    name: "res2a"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res2a"
    top: "res2a"
    name: "res2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2a"
    top: "res2b_branch2a"
    name: "res2b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2a"
    name: "bn2b_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2a"
    name: "scale2b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2a"
    name: "res2b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b_branch2a"
    top: "res2b_branch2b"
    name: "res2b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 64
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2b"
    name: "bn2b_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res2b_branch2b"
    top: "res2b_branch2b"
    name: "scale2b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res2a"
    bottom: "res2b_branch2b"
    top: "res2b"
    name: "res2b"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res2b"
    top: "res2b"
    name: "res2b_relu"
    type: "ReLU"
}

layer {
    bottom: "res2b"
    top: "res3a_branch1"
    name: "res3a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 1
        pad: 0
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res3a_branch1"
    top: "res3a_branch1"
    name: "bn3a_branch1"
    type: "BatchNorm"

    
}

layer {
    bottom: "res3a_branch1"
    top: "res3a_branch1"
    name: "scale3a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res2b"
    top: "res3a_branch2a"
    name: "res3a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2a"
    name: "bn3a_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2a"
    name: "scale3a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2a"
    name: "res3a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a_branch2a"
    top: "res3a_branch2b"
    name: "res3a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2b"
    name: "bn3a_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res3a_branch2b"
    top: "res3a_branch2b"
    name: "scale3a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res3a_branch1"
    bottom: "res3a_branch2b"
    top: "res3a"
    name: "res3a"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res3a"
    top: "res3a"
    name: "res3a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3a"
    top: "res3b_branch2a"
    name: "res3b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2a"
    name: "bn3b_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2a"
    name: "scale3b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2a"
    name: "res3b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b_branch2a"
    top: "res3b_branch2b"
    name: "res3b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 128
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res3b_branch2b"
    top: "res3b_branch2b"
    name: "bn3b_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res3b_branch2b"
    top: "res3b_branch2b"
    name: "scale3b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res3a"
    bottom: "res3b_branch2b"
    top: "res3b"
    name: "res3b"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res3b"
    top: "res3b"
    name: "res3b_relu"
    type: "ReLU"
}

layer {
    bottom: "res3b"
    top: "res4a_branch1"
    name: "res4a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 1
        pad: 0
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res4a_branch1"
    top: "res4a_branch1"
    name: "bn4a_branch1"
    type: "BatchNorm"

    
}

layer {
    bottom: "res4a_branch1"
    top: "res4a_branch1"
    name: "scale4a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res3b"
    top: "res4a_branch2a"
    name: "res4a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2a"
    name: "bn4a_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2a"
    name: "scale4a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2a"
    name: "res4a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4a_branch2a"
    top: "res4a_branch2b"
    name: "res4a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res4a_branch2b"
    top: "res4a_branch2b"
    name: "bn4a_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res4a_branch2b"
    top: "res4a_branch2b"
    name: "scale4a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res4a_branch1"
    bottom: "res4a_branch2b"
    top: "res4a"
    name: "res4a"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res4a"
    top: "res4a"
    name: "res4a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4a"
    top: "res4b_branch2a"
    name: "res4b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2a"
    name: "bn4b_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2a"
    name: "scale4b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2a"
    name: "res4b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res4b_branch2a"
    top: "res4b_branch2b"
    name: "res4b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 256
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res4b_branch2b"
    top: "res4b_branch2b"
    name: "bn4b_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res4b_branch2b"
    top: "res4b_branch2b"
    name: "scale4b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res4a"
    bottom: "res4b_branch2b"
    top: "res4b"
    name: "res4b"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res4b"
    top: "res4b"
    name: "res4b_relu"
    type: "ReLU"
}

layer {
    bottom: "res4b"
    top: "res5a_branch1"
    name: "res5a_branch1"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 1
        pad: 0
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res5a_branch1"
    top: "res5a_branch1"
    name: "bn5a_branch1"
    type: "BatchNorm"

    
}

layer {
    bottom: "res5a_branch1"
    top: "res5a_branch1"
    name: "scale5a_branch1"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res4b"
    top: "res5a_branch2a"
    name: "res5a_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 2
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2a"
    name: "bn5a_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2a"
    name: "scale5a_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2a"
    name: "res5a_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5a_branch2a"
    top: "res5a_branch2b"
    name: "res5a_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res5a_branch2b"
    top: "res5a_branch2b"
    name: "bn5a_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res5a_branch2b"
    top: "res5a_branch2b"
    name: "scale5a_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res5a_branch1"
    bottom: "res5a_branch2b"
    top: "res5a"
    name: "res5a"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res5a"
    top: "res5a"
    name: "res5a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5a"
    top: "res5b_branch2a"
    name: "res5b_branch2a"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2a"
    name: "bn5b_branch2a"
    type: "BatchNorm"

    
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2a"
    name: "scale5b_branch2a"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2a"
    name: "res5b_branch2a_relu"
    type: "ReLU"
}

layer {
    bottom: "res5b_branch2a"
    top: "res5b_branch2b"
    name: "res5b_branch2b"
    type: "Convolution"
    convolution_param {
        num_output: 512
        kernel_size: 3
        pad: 1
        stride: 1
        weight_filler {
            type: "msra"
        }
        bias_term: false

    }
}

layer {
    bottom: "res5b_branch2b"
    top: "res5b_branch2b"
    name: "bn5b_branch2b"
    type: "BatchNorm"

    
}

layer {
    bottom: "res5b_branch2b"
    top: "res5b_branch2b"
    name: "scale5b_branch2b"
    type: "Scale"
    scale_param {
        bias_term: true
    }
}

layer {
    bottom: "res5a"
    bottom: "res5b_branch2b"
    top: "res5b"
    name: "res5b"
    type: "Eltwise"
    eltwise_param {
        operation: SUM
    }
}

layer {
    bottom: "res5b"
    top: "res5b"
    name: "res5b_relu"
    type: "ReLU"
}

layer {
    bottom: "res5b"
    top: "pool5"
    name: "pool5"
    type: "Pooling"
    pooling_param {
        kernel_size: 5
        stride: 1
        pool: AVE
    }
}


layer {
    bottom: "pool5"
    top: "fc128"
    name: "fc128"
    type: "InnerProduct"
    
    inner_product_param {
        num_output: 128
        weight_filler {
            type: "xavier"
        }
        bias_term: false
        # bias_filler {
        #     type: "constant"
        #     value: 0
        # }
    }
}


layer {
  name: "BN_fc128"
  type: "BatchNorm"
  bottom: "fc128"
  top: "fc128"
}
layer {
  name: "scale_fc128"
  type: "Scale"
  bottom: "fc128"
  top: "fc128"
  scale_param {
    bias_term: true
  }
}

layer {
  name: "TanH1"
  type: "TanH"
  bottom: "fc128"
  top: "fc128"
}

layer {
  name: "reshape"
  type: "Reshape"
  bottom: "fc128"
  top: "reshape"
  reshape_param {
    shape {
      dim: -1
      dim: 128
      dim: 1
      dim: 1
    }
  }
}

layer {
  name: "permute_1"
  type: "Permute"
  bottom: "reshape"
  top: "Conv2"
  permute_param {
    order: 2
    order: 1
    order: 0
    order: 3
  }
}





#=======================================
layer {
  name: "Deconv1"
  type: "Deconvolution"
  bottom: "Conv2"
  top: "Deconv1"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 8
    kernel_size: 1
    stride: 8
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN12"
  type: "BatchNorm"
  bottom: "Deconv1"
  top: "Deconv1"
}
layer {
  name: "Scale12"
  type: "Scale"
  bottom: "Deconv1"
  top: "Deconv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU11"
  type: "ReLU"
  bottom: "Deconv1"
  top: "Deconv1"
}
layer {
  name: "OctGrow1"
  type: "OctreeGrow"
  top: "OctGrow1"
  octree_param {
    curr_depth: 1
    full_octree: true
    batch_size: 1
  }
}
layer {
  name: "OctGrow2"
  type: "OctreeGrow"
  bottom: "OctGrow1"
  top: "OctGrow2"
  octree_param {
    curr_depth: 2
    full_octree: true
    batch_size: 1
  }
}
layer {
  name: "OctDecnv1"
  type: "OctreeDeconv"
  bottom: "Deconv1"
  bottom: "OctGrow2"
  top: "OctDecnv1"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 1
  }
}
layer {
  name: "BN13"
  type: "BatchNorm"
  bottom: "OctDecnv1"
  top: "OctDecnv1"
}
layer {
  name: "Scale13"
  type: "Scale"
  bottom: "OctDecnv1"
  top: "OctDecnv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU12"
  type: "ReLU"
  bottom: "OctDecnv1"
  top: "OctDecnv1"
}
layer {
  name: "OctConv10"
  type: "OctreeConv"
  bottom: "OctDecnv1"
  bottom: "OctGrow2"
  top: "OctConv10"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 2
  }
}
layer {
  name: "BN14"
  type: "BatchNorm"
  bottom: "OctConv10"
  top: "OctConv10"
}
layer {
  name: "Scale14"
  type: "Scale"
  bottom: "OctConv10"
  top: "OctConv10"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU13"
  type: "ReLU"
  bottom: "OctConv10"
  top: "OctConv10"
}
layer {
  name: "Conv3"
  type: "Convolution"
  bottom: "OctConv10"
  top: "Conv3"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN15"
  type: "BatchNorm"
  bottom: "Conv3"
  top: "Conv3"
}
layer {
  name: "Scale15"
  type: "Scale"
  bottom: "Conv3"
  top: "Conv3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU14"
  type: "ReLU"
  bottom: "Conv3"
  top: "Conv3"
}
layer {
  name: "Conv4"
  type: "Convolution"
  bottom: "Conv3"
  top: "Conv4"
  convolution_param {
    num_output: 2
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax1"
  type: "ArgMax"
  bottom: "Conv4"
  top: "ArgMax1"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt1"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow2"
  bottom: "ArgMax1"
  top: "OctUpt1"
  octree_param {
    curr_depth: 2
    mask: 1
  }
}
layer {
  name: "OctGrow3"
  type: "OctreeGrow"
  bottom: "OctUpt1"
  top: "OctGrow3"
  octree_param {
    curr_depth: 3
  }
}
layer {
  name: "OctDecnv2"
  type: "OctreeDeconv"
  bottom: "OctConv10"
  bottom: "OctGrow3"
  top: "OctDecnv2"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 2
  }
}
layer {
  name: "BN16"
  type: "BatchNorm"
  bottom: "OctDecnv2"
  top: "OctDecnv2"
}
layer {
  name: "Scale16"
  type: "Scale"
  bottom: "OctDecnv2"
  top: "OctDecnv2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU15"
  type: "ReLU"
  bottom: "OctDecnv2"
  top: "OctDecnv2"
}
layer {
  name: "OctConv11"
  type: "OctreeConv"
  bottom: "OctDecnv2"
  bottom: "OctGrow3"
  top: "OctConv11"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 3
  }
}
layer {
  name: "BN17"
  type: "BatchNorm"
  bottom: "OctConv11"
  top: "OctConv11"
}
layer {
  name: "Scale17"
  type: "Scale"
  bottom: "OctConv11"
  top: "OctConv11"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU16"
  type: "ReLU"
  bottom: "OctConv11"
  top: "OctConv11"
}
layer {
  name: "Conv5"
  type: "Convolution"
  bottom: "OctConv11"
  top: "Conv5"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN18"
  type: "BatchNorm"
  bottom: "Conv5"
  top: "Conv5"
}
layer {
  name: "Scale18"
  type: "Scale"
  bottom: "Conv5"
  top: "Conv5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU17"
  type: "ReLU"
  bottom: "Conv5"
  top: "Conv5"
}
layer {
  name: "Conv6"
  type: "Convolution"
  bottom: "Conv5"
  top: "Conv6"
  convolution_param {
    num_output: 2
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax2"
  type: "ArgMax"
  bottom: "Conv6"
  top: "ArgMax2"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt2"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow3"
  bottom: "ArgMax2"
  top: "OctUpt2"
  octree_param {
    curr_depth: 3
    mask: 1
  }
}
layer {
  name: "OctGrow4"
  type: "OctreeGrow"
  bottom: "OctUpt2"
  top: "OctGrow4"
  octree_param {
    curr_depth: 4
  }
}
layer {
  name: "OctDecnv3"
  type: "OctreeDeconv"
  bottom: "OctConv11"
  bottom: "OctGrow4"
  top: "OctDecnv3"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 3
  }
}
layer {
  name: "BN19"
  type: "BatchNorm"
  bottom: "OctDecnv3"
  top: "OctDecnv3"
}
layer {
  name: "Scale19"
  type: "Scale"
  bottom: "OctDecnv3"
  top: "OctDecnv3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU18"
  type: "ReLU"
  bottom: "OctDecnv3"
  top: "OctDecnv3"
}
layer {
  name: "OctConv12"
  type: "OctreeConv"
  bottom: "OctDecnv3"
  bottom: "OctGrow4"
  top: "OctConv12"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 4
  }
}
layer {
  name: "BN20"
  type: "BatchNorm"
  bottom: "OctConv12"
  top: "OctConv12"
}
layer {
  name: "Scale20"
  type: "Scale"
  bottom: "OctConv12"
  top: "OctConv12"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU19"
  type: "ReLU"
  bottom: "OctConv12"
  top: "OctConv12"
}
layer {
  name: "Conv7"
  type: "Convolution"
  bottom: "OctConv12"
  top: "Conv7"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN21"
  type: "BatchNorm"
  bottom: "Conv7"
  top: "Conv7"
}
layer {
  name: "Scale21"
  type: "Scale"
  bottom: "Conv7"
  top: "Conv7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU20"
  type: "ReLU"
  bottom: "Conv7"
  top: "Conv7"
}
layer {
  name: "Conv8"
  type: "Convolution"
  bottom: "Conv7"
  top: "Conv8"
  convolution_param {
    num_output: 3
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Conv9"
  type: "Convolution"
  bottom: "Conv7"
  top: "Conv9"
  convolution_param {
    num_output: 4
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax3"
  type: "ArgMax"
  bottom: "Conv8"
  top: "ArgMax3"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt3"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow4"
  bottom: "ArgMax3"
  top: "OctUpt3"
  octree_param {
    curr_depth: 4
    mask: 1
  }
}

layer {
  name: "OctreeMask1"
  type: "OctreeZeroize"
  bottom: "Conv9"
  bottom: "ArgMax3"
  top: "OctreeMask1"
  octree_param {
    mask: 0
  }
}
layer {
  name: "Slice1"
  type: "Slice"
  bottom: "OctreeMask1"
  top: "Slice1"
  top: "Slice2"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "Normalize1"
  type: "Normalize"
  bottom: "Slice1"
  top: "Normalize1"
}
layer {
  name: "TanH2"
  type: "TanH"
  bottom: "Slice2"
  top: "TanH2"
}
layer {
  name: "Concat1"
  type: "Concat"
  bottom: "Normalize1"
  bottom: "TanH2"
  top: "Concat1"
  concat_param {
    axis: 1
  }
}
layer {
  name: "normal_4"
  type: "Split"
  bottom: "Concat1"
   top: "normal_4"
}



layer {
  name: "OctGrow5"
  type: "OctreeGrow"
  bottom: "OctUpt3"
  top: "OctGrow5"
  octree_param {
    curr_depth: 5
  }
}
layer {
  name: "OctDecnv4"
  type: "OctreeDeconv"
  bottom: "OctConv12"
  bottom: "OctGrow5"
  top: "OctDecnv4"
  convolution_param {
    num_output: 16
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 4
  }
}
layer {
  name: "BN22"
  type: "BatchNorm"
  bottom: "OctDecnv4"
  top: "OctDecnv4"
}
layer {
  name: "Scale22"
  type: "Scale"
  bottom: "OctDecnv4"
  top: "OctDecnv4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU21"
  type: "ReLU"
  bottom: "OctDecnv4"
  top: "OctDecnv4"
}
layer {
  name: "OctConv13"
  type: "OctreeConv"
  bottom: "OctDecnv4"
  bottom: "OctGrow5"
  top: "OctConv13"
  convolution_param {
    num_output: 16
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 5
  }
}
layer {
  name: "BN23"
  type: "BatchNorm"
  bottom: "OctConv13"
  top: "OctConv13"
}
layer {
  name: "Scale23"
  type: "Scale"
  bottom: "OctConv13"
  top: "OctConv13"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU22"
  type: "ReLU"
  bottom: "OctConv13"
  top: "OctConv13"
}
layer {
  name: "Conv10"
  type: "Convolution"
  bottom: "OctConv13"
  top: "Conv10"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN24"
  type: "BatchNorm"
  bottom: "Conv10"
  top: "Conv10"
}
layer {
  name: "Scale24"
  type: "Scale"
  bottom: "Conv10"
  top: "Conv10"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU23"
  type: "ReLU"
  bottom: "Conv10"
  top: "Conv10"
}
layer {
  name: "Conv11"
  type: "Convolution"
  bottom: "Conv10"
  top: "Conv11"
  convolution_param {
    num_output: 3
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Conv12"
  type: "Convolution"
  bottom: "Conv10"
  top: "Conv12"
  convolution_param {
    num_output: 4
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax4"
  type: "ArgMax"
  bottom: "Conv11"
  top: "ArgMax4"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt4"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow5"
  bottom: "ArgMax4"
  top: "OctUpt4"
  octree_param {
    curr_depth: 5
    mask: 1
  }
}

layer {
  name: "OctreeMask5"
  type: "OctreeZeroize"
  bottom: "Conv12"
  bottom: "ArgMax4"
  top: "OctreeMask5"
  octree_param {
    mask: 0
  }
}
layer {
  name: "Slice3"
  type: "Slice"
  bottom: "OctreeMask5"
  top: "Slice3"
  top: "Slice4"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "Normalize2"
  type: "Normalize"
  bottom: "Slice3"
  top: "Normalize2"
}
layer {
  name: "TanH3"
  type: "TanH"
  bottom: "Slice4"
  top: "TanH3"
}
layer {
  name: "Concat2"
  type: "Concat"
  bottom: "Normalize2"
  bottom: "TanH3"
  top: "Concat2"
  concat_param {
    axis: 1
  }
}
layer {
  name: "normal_5"
  type: "Split"
  bottom: "Concat2"
   top: "normal_5"
}


layer {
  name: "OctGrow6"
  type: "OctreeGrow"
  bottom: "OctUpt4"
  top: "OctGrow6"
  octree_param {
    curr_depth: 6
  }
}
layer {
  name: "OctDecnv5"
  type: "OctreeDeconv"
  bottom: "OctConv13"
  bottom: "OctGrow6"
  top: "OctDecnv5"
  convolution_param {
    num_output: 12
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 5
  }
}
layer {
  name: "BN25"
  type: "BatchNorm"
  bottom: "OctDecnv5"
  top: "OctDecnv5"
}
layer {
  name: "Scale25"
  type: "Scale"
  bottom: "OctDecnv5"
  top: "OctDecnv5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU24"
  type: "ReLU"
  bottom: "OctDecnv5"
  top: "OctDecnv5"
}
layer {
  name: "OctConv14"
  type: "OctreeConv"
  bottom: "OctDecnv5"
  bottom: "OctGrow6"
  top: "OctConv14"
  convolution_param {
    num_output: 12
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 6
  }
}
layer {
  name: "BN26"
  type: "BatchNorm"
  bottom: "OctConv14"
  top: "OctConv14"
}
layer {
  name: "Scale26"
  type: "Scale"
  bottom: "OctConv14"
  top: "OctConv14"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU25"
  type: "ReLU"
  bottom: "OctConv14"
  top: "OctConv14"
}
layer {
  name: "Conv13"
  type: "Convolution"
  bottom: "OctConv14"
  top: "Conv13"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN27"
  type: "BatchNorm"
  bottom: "Conv13"
  top: "Conv13"
}
layer {
  name: "Scale27"
  type: "Scale"
  bottom: "Conv13"
  top: "Conv13"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU26"
  type: "ReLU"
  bottom: "Conv13"
  top: "Conv13"
}
layer {
  name: "Conv14"
  type: "Convolution"
  bottom: "Conv13"
  top: "Conv14"
  convolution_param {
    num_output: 3
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Conv15"
  type: "Convolution"
  bottom: "Conv13"
  top: "Conv15"
  convolution_param {
    num_output: 4
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax5"
  type: "ArgMax"
  bottom: "Conv14"
  top: "ArgMax5"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt5"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow6"
  bottom: "ArgMax5"
  top: "OctUpt5"
  octree_param {
    curr_depth: 6
    mask: 1
  }
}

layer {
  name: "OctreeMask9"
  type: "OctreeZeroize"
  bottom: "Conv15"
  bottom: "ArgMax5"
  top: "OctreeMask9"
  octree_param {
    mask: 0
  }
}
layer {
  name: "Slice5"
  type: "Slice"
  bottom: "OctreeMask9"
  top: "Slice5"
  top: "Slice6"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "Normalize3"
  type: "Normalize"
  bottom: "Slice5"
  top: "Normalize3"
}
layer {
  name: "TanH4"
  type: "TanH"
  bottom: "Slice6"
  top: "TanH4"
}
layer {
  name: "Concat3"
  type: "Concat"
  bottom: "Normalize3"
  bottom: "TanH4"
  top: "Concat3"
  concat_param {
    axis: 1
  }
}
layer {
  name: "normal_6"
  type: "Split"
  bottom: "Concat3"
   top: "normal_6"
}


layer {
  name: "OctGrow7"
  type: "OctreeGrow"
  bottom: "OctUpt5"
  top: "OctGrow7"
  octree_param {
    curr_depth: 7
  }
}
layer {
  name: "OctDecnv6"
  type: "OctreeDeconv"
  bottom: "OctConv14"
  bottom: "OctGrow7"
  top: "OctDecnv6"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 6
  }
}
layer {
  name: "BN28"
  type: "BatchNorm"
  bottom: "OctDecnv6"
  top: "OctDecnv6"
}
layer {
  name: "Scale28"
  type: "Scale"
  bottom: "OctDecnv6"
  top: "OctDecnv6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU27"
  type: "ReLU"
  bottom: "OctDecnv6"
  top: "OctDecnv6"
}
layer {
  name: "OctConv15"
  type: "OctreeConv"
  bottom: "OctDecnv6"
  bottom: "OctGrow7"
  top: "OctConv15"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
  octree_param {
    curr_depth: 7
  }
}
layer {
  name: "BN29"
  type: "BatchNorm"
  bottom: "OctConv15"
  top: "OctConv15"
}
layer {
  name: "Scale29"
  type: "Scale"
  bottom: "OctConv15"
  top: "OctConv15"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU28"
  type: "ReLU"
  bottom: "OctConv15"
  top: "OctConv15"
}
layer {
  name: "Conv16"
  type: "Convolution"
  bottom: "OctConv15"
  top: "Conv16"
  convolution_param {
    num_output: 8
    bias_term: false
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "BN30"
  type: "BatchNorm"
  bottom: "Conv16"
  top: "Conv16"
}
layer {
  name: "Scale30"
  type: "Scale"
  bottom: "Conv16"
  top: "Conv16"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "ReLU29"
  type: "ReLU"
  bottom: "Conv16"
  top: "Conv16"
}
layer {
  name: "Conv17"
  type: "Convolution"
  bottom: "Conv16"
  top: "Conv17"
  convolution_param {
    num_output: 3
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "Conv18"
  type: "Convolution"
  bottom: "Conv16"
  top: "Conv18"
  convolution_param {
    num_output: 4
    bias_term: true
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "ArgMax6"
  type: "ArgMax"
  bottom: "Conv17"
  top: "ArgMax6"
  argmax_param {
    out_max_val: false
    top_k: 1
    axis: 1
  }
}
layer {
  name: "OctUpt6"
  type: "OctreeUpdateLabel"
  bottom: "OctGrow7"
  bottom: "ArgMax6"
  top: "OctUpt6"
  octree_param {
    curr_depth: 7
    mask: 1
  }
}

layer {
  name: "OctreeMask13"
  type: "OctreeZeroize"
  bottom: "Conv18"
  bottom: "ArgMax6"
  top: "OctreeMask13"
  octree_param {
    mask: 0
  }
}
layer {
  name: "Slice7"
  type: "Slice"
  bottom: "OctreeMask13"
  top: "Slice7"
  top: "Slice8"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "Normalize4"
  type: "Normalize"
  bottom: "Slice7"
  top: "Normalize4"
}
layer {
  name: "TanH5"
  type: "TanH"
  bottom: "Slice8"
  top: "TanH5"
}
layer {
  name: "Concat4"
  type: "Concat"
  bottom: "Normalize4"
  bottom: "TanH5"
  top: "Concat4"
  concat_param {
    axis: 1
  }
}
layer {
  name: "normal_7"
  type: "Split"
  bottom: "Concat4"
 
  top: "normal_7"
}


layer {
  name: "output.octree"
  type: "OctreeSetFeature"
  bottom: "OctUpt6"
  bottom: "normal_4"
  bottom: "normal_5"
  bottom: "normal_6"
  bottom: "normal_7"
  top: "output.octree"
  octree_param {
    curr_depth: 7
    is_adaptive: true
    adapt_depth: 4
  }
}